% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/missForest.R
\name{missForest}
\alias{missForest}
\title{Imputes a dataframe and returns imputation models to be used on new observations}
\usage{
missForest(
  xmis,
  maxiter = 10,
  OOB_weights = NULL,
  decreasing = FALSE,
  force = FALSE,
  initialization = "median/mode",
  x_init = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{xmis}{dataframe containing missing values}

\item{maxiter}{maximum number of iterations}

\item{OOB_weights}{vector of weights for each variable in the convergence criteria. By default all variables weight equally.
Considering that imputation models are built for all variables, even if no missing values are encountered, it can considered to adjust the
weights to 0 for those variables that are expected to never be missing. Alternatively the weights can be adjusted
according to the (expected) proportion of missingness on each variable.}

\item{decreasing}{(boolean) if TRUE the columns are sorted with decreasing amount of missing values}

\item{initialization}{initialization method before running RF models; supported: mean/mode, median/mode and custom}

\item{x_init}{if initialization = custom; a complete dataframe to be used as initialization}

\item{verbose}{(boolean) if TRUE then missForest returns error estimates and runtime}

\item{...}{other arguments passed to ranger function (some arguments that are specific to each variable type are not supported)}
}
\value{
Object of class \code{missForest} with elements
    \item{\code{ximp}}{dataframe with imputed values}
    \item{\code{OOBerror}}{TODO! this and corrected!}
    \item{\code{init}}{NULL if custome initalization is used; otherwise list of mean/mode or median/mode for each variable;}
    \item{\code{models}}{list of random forest models for each iteration}
    \item{\code{impute_sequence}}{vector variable names in the order in which imputation has been run}
    \item{\code{maxiter}}{maxiter parameter as passed to the function}
}
\description{
Imputes a dataframe and returns imputation models to be used on new observations.
Models are built for each variable in the dataframe (even if there are no missing values).
}
\examples{
data(iris)
iris_mis <- produce_NA(iris, proportion = 0.1)
imputation_object <- missForest(iris_mis)
iris_imp <- imputation_object$ximp
}
